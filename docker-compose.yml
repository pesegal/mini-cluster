version: '3'
services:
  front-end:
    image: "pesegal/mc-front-end:0.0.1"
    container_name: front-end
    networks:
      - mc-net
    ports:
      - "3000:8080"
    environment:
      SERVICE_COUNT_HOST: "http://count-service"
      SERVICE_COUNT_PORT: 8081
      SPRING_CLOUD_CONSUL_HOST: "http://consul"
      # Note ports only bind between container -> host, not container -> container
      # Therefore, use app.prop configured server.port for count-service

    depends_on:
      - consul

  count-service:
    image: "pesegal/mc-count-service:0.0.1"
    networks:
      - mc-net
    ports:
      - "8081" # Switch this to random port mapping to allow for --scale

    environment:
      SPRING_CLOUD_CONSUL_HOST: "http://consul"
      SPRING_CLOUD_CONSUL_DISCOVERY_INSTANCEID: '$${spring.application.name}:$${random.value}'

    depends_on:
      - consul

# Dynamic Configuration Settings
  git2consul:
    image: "cimpress/git2consul"
    container_name: git2consul

    entrypoint:
      - "/usr/bin/node"
      - "/usr/lib/node_modules/git2consul"
      - "--config-file"
      - "/etc/git2consul.d/config.json"

    environment:
      CONSUL_ENDPOINT: 'consul'
      CONSUL_PORT: '8500'

    volumes:
      - "${PWD}/configRepo/git2consul_config.json:/etc/git2consul.d/config.json"
      - "${PWD}/configRepo/appConfig:/var/repo"

    networks:
      - mc-net

    depends_on:
      - consul

  consul:
    hostname: consul
    image: "consul"

    container_name: consul-dev

    volumes:
      - "${PWD}/configRepo/consulConfig:/consul/config"


    networks:
      - mc-net
    ports:
      - "8500:8500"
      - "8600:8600"

  vault:
    hostname: vault
    image: "vault"
    container_name: vault-dev
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "vault_dev" # Sets initial token to static for testing

    volumes:
      - "${PWD}/configRepo/vaultConfig:/vault/config"

    depends_on:
      - consul
      - db
    networks:
      - mc-net

  db:
    hostname: db
    image: "postgres"
    container_name: postgres-dev
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: "password"

    volumes:
      - "${PWD}/configRepo/dbConfig:/docker-entrypoint-initdb.d/"

    networks:
      - mc-net

networks:
  mc-net:
    driver: bridge


